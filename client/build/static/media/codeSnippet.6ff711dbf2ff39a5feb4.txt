using System;
using System.Security.Cryptography;

public class Program
{
    public static void Main(string[] args)
    {
        string docHash = File.ReadAllText("./hash.txt");
        string b64sig = File.ReadAllText("./signature.txt");
        string issuerPubKey = File.ReadAllText("./publicKey.txt");
        
        byte[] binHash = StringToByteArray(docHash);
        byte[] binSig = Convert.FromBase64String(b64sig);

        RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();
        rsa.ImportFromPem(issuerPubKey);

        bool isValid = rsa.VerifyData(binHash, SHA256.Create(), binSig);
        Console.WriteLine(isValid);
    }

    public static byte[] StringToByteArray(string hex) {
    return Enumerable.Range(0, hex.Length)
                     .Where(x => x % 2 == 0)
                     .Select(x => Convert.ToByte(hex.Substring(x, 2), 16))
                     .ToArray();
    }
}